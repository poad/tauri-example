name: Build

on:
  push:
    branches: [ main ]
  pull_request_target:
    branches: [ main ]

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

permissions: write-all

jobs:
  configure:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - name: Pull request auto merge enabler
        if: github.event_name == 'pull_request' && github.actor != 'dependabot[bot]'
        uses: poad/github-pull-request-auto-merge-enable-action@v2.1.0
        with:
          pull_request_number: ${{ github.event.pull_request.number }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.event.repository.name }}
          owner: ${{ github.repository_owner }}
          merge_method: SQUASH

  build:
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: windows-latest, target: 'x86_64-pc-windows-msvc' }
          - { os: macOS-latest, target: 'x86_64-apple-darwin' }
          - { os: ubuntu-latest, target: 'x86_64-unknown-linux-gnu' }
          - { os: ubuntu-latest, target: 'x86_64-unknown-linux-musl' }
          # - { os: windows-latest, target: 'arch64-pc-windows-msvc' }
          # - { os: macOS-latest, target: 'aarch64-apple-darwin' }
          # - { os: ubuntu-latest, target: 'aarch64-unknown-linux-gnu' }
          # - { os: ubuntu-latest, target: 'aarch64-unknown-linux-musl' }

    steps:
    - name: Install dependency package
      if: matrix.config.os == 'ubuntu-latest'
      run: sudo apt-get update -qq && sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libayatana-appindicator3-dev librsvg2-dev patchelf  --fix-missing
    - name: Add cross build targets
      run: rustup target add ${{ matrix.config.target }}
    - name: Update Rust toolchain
      run: rustup update
    - name: Install cross
      run: cargo install cross

    - uses: actions/checkout@v4
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        check-latest: true
    - uses: pnpm/action-setup@v4
      name: Install pnpm
      with:
        run_install: |
          - recursive: true
            args: [--no-frozen-lockfile]
          -  args: [--global, serve ]
    - name: Build
      env:
        BUILD_PATH: ./dist 
      run: pnpm lint && pnpm build && pnpm tauri build
